{"version":3,"sources":["components/Filter.js","services/persons.js","components/Persons.js","components/PersonForm.js","components/Notification.js","App.js","index.js"],"names":["Filter","props","onChange","handleFilterChange","value","newFilter","baseUrl","axios","get","then","response","data","newObject","post","id","put","delete","Persons","persons","deletePerson","filter","person","name","toLowerCase","includes","map","key","number","onClick","PersonForm","onSubmit","addPerson","handleNameChange","newName","handleNumberChange","newNumber","type","Notification","successMessage","errorMessage","messageStyle","color","background","fontSize","borderStyle","padding","marginBottom","style","App","useState","setPersons","useEffect","personService","initialPersons","setNewName","setNewNumber","setNewFilter","setSuccessMessage","setErrorMessage","event","target","preventDefault","sameName","find","sameNumber","personObject","returnedPerson","setTimeout","catch","error","console","log","alert","concat","window","confirm","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.fd1bed73.chunk.js","sourcesContent":["import React from 'react'\n\nconst Filter = props => (\n    <div>\n        filter shown with &nbsp;\n        <input\n            onChange={props.handleFilterChange}\n            value={props.newFilter}\n        />\n    </div>\n)\n\nexport default Filter\n","import axios from 'axios'\nconst baseUrl = '/api/persons'\n\nconst getAll = () => {\n    const request = axios.get(baseUrl)\n    return request.then(response => response.data)\n}\n\nconst create = newObject => {\n    const request = axios.post(baseUrl, newObject)\n    return request.then(response => response.data)\n}\n\nconst update = (id, newObject) => {\n    const request = axios.put(`${baseUrl}/${id}`, newObject)\n    return request.then(response => response.data)\n}\n\nconst destroy = id => {\n    return axios.delete(`${baseUrl}/${id}`)\n}\n\nexport default { getAll, create, update, destroy }\n","import React from 'react'\n\nconst Persons = ({ persons, newFilter, deletePerson }) => (\n    <div>\n        {\n            persons\n            .filter(person =>\n                person.name\n                .toLowerCase()\n                .includes(newFilter.toLowerCase())\n            )\n            .map(person =>\n                <p key={person.id}>\n                    {person.name} {person.number}\n                    <button onClick={() => deletePerson(person.id)}>\n                        delete\n                    </button>\n                </p>\n            )\n        }\n    </div>\n)\n\nexport default Persons\n","import React from 'react'\n\nconst PersonForm = props => (\n    <form onSubmit={props.addPerson}>\n        <div>\n            name: &nbsp;\n            <input\n                onChange={props.handleNameChange}\n                value={props.newName}\n            />\n        </div>\n        <div>\n            number: &nbsp;\n            <input\n                onChange={props.handleNumberChange}\n                value={props.newNumber}\n            />\n        </div>\n        <div>\n            <button type=\"submit\">add</button>\n        </div>\n    </form>\n)\n\nexport default PersonForm\n","import React from 'react'\n\nconst Notification = ({ successMessage, errorMessage }) => {\n    let color = 'green'\n    successMessage ? color = 'green' : color = 'red'\n\n    const messageStyle = {\n        color: color,\n        background: 'lightgrey',\n        fontSize: 20,\n        borderStyle: 'solid',\n        padding: 10,\n        marginBottom: 10\n    }\n\n    if (successMessage === null && errorMessage === null) {\n        return null\n    }\n\n    return (\n        <div style={messageStyle}>\n            {successMessage ? successMessage : errorMessage}\n        </div>\n    )\n}\n\nexport default Notification\n","import React, { useState, useEffect } from 'react'\nimport Filter from './components/Filter'\nimport personService from './services/persons'\nimport Persons from './components/Persons'\nimport PersonForm from './components/PersonForm'\nimport Notification from './components/Notification'\n\nconst App = () => {\n    const [ persons, setPersons ] = useState([])\n\n    useEffect(() => {\n        personService\n            .getAll()\n            .then(initialPersons => {\n                setPersons(initialPersons)\n            })\n    }, [])\n\n    const [ newName, setNewName ] = useState('')\n    const [ newNumber, setNewNumber ] = useState('')\n    const [ newFilter, setNewFilter ] = useState('')\n    const [ successMessage, setSuccessMessage ] = useState(null)\n    const [ errorMessage, setErrorMessage ] = useState(null)\n\n    const handleNameChange = event => setNewName(event.target.value)\n    const handleNumberChange = event => setNewNumber(event.target.value)\n    const handleFilterChange = event => setNewFilter(event.target.value)\n\n    const addPerson = event => {\n        event.preventDefault()\n\n        const sameName = persons.find(person => person.name === newName)\n        const sameNumber = persons.find(person => person.number === newNumber)\n\n        // Different number input for existing name\n        if (sameName && !sameNumber) {\n            const id = sameName.id\n            const personObject = { ...sameName, number: newNumber }\n\n            personService\n                .update(id, personObject)\n                .then(returnedPerson => {\n                    setPersons(persons.map(person =>\n                        person.id !== id ? person : returnedPerson\n                    ))\n                    setNewName('')\n                    setNewNumber('')\n\n                    setSuccessMessage(`Updated ${returnedPerson.name}.`)\n                    setTimeout(() => {\n                        setSuccessMessage(null)\n                    }, 2500)\n                })\n                .catch(error => {\n                    console.log(error.response.data)\n                    \n                    setErrorMessage(error.response.data)\n                    setTimeout(() => {\n                        setErrorMessage(null)\n                    }, 3000)\n                    setPersons(persons.filter(person => person.id !== id))\n                })\n        } else if (sameNumber) {\n            alert(`${sameNumber.number} is already on the phonebook.`)\n        } else {\n            const personObject = {\n                name: newName,\n                number: newNumber\n            }\n\n            personService\n                .create(personObject)\n                .then(returnedPerson => {\n                    setPersons(persons.concat(returnedPerson))\n                    setNewName('')\n                    setNewNumber('')\n\n                    setSuccessMessage(`Added ${returnedPerson.name}.`)\n                    setTimeout(() => {\n                        setSuccessMessage(null)\n                    }, 2500)\n                })\n                .catch(error => {\n                    console.log(error.response.data)\n\n                    setErrorMessage(error.response.data.error)\n                    setTimeout(() => {\n                        setErrorMessage(null)\n                    }, 3000)\n                })\n        }\n    }\n\n    const deletePerson = id => {\n        const person = persons.find(person => person.id === id)\n\n        if (window.confirm(`Delete ${person.name}?`))\n        {\n            personService\n                .destroy(id)\n                .then(setPersons(persons.filter(\n                    person => person.id !== id\n                )))\n        }\n    }\n\n    return (\n        <div>\n            <h2>Phonebook</h2>\n            <Notification\n                successMessage={successMessage}\n                errorMessage={errorMessage}\n            />\n            <Filter\n                newFilter={newFilter}\n                handleFilterChange={handleFilterChange}\n            />\n            <h3>add a new</h3>\n            <PersonForm\n                addPerson={addPerson}\n                newName={newName}\n                newNumber={newNumber}\n                handleNameChange={handleNameChange}\n                handleNumberChange={handleNumberChange}\n            />\n            <h3>Numbers</h3>\n            <Persons\n                persons={persons}\n                newFilter={newFilter}\n                deletePerson={deletePerson}\n            />\n        </div>\n    )\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}